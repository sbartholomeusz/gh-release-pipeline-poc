name: create-release

on:
  # Run workflow manually
  workflow_dispatch:

  push:
    branches:
      - main

defaults:
  run:
    working-directory: ./src

env:
  NUGET_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  GH_ACCOUNT_NAME: ${{ github.repository_owner }}
  NUGET_PACKAGE_PATH: './nupkg'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet-version: [ '7.0.x' ]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Deploy package to github
      - name: Setup dotnet
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ matrix.dotnet-version }}
          source-url: https://nuget.pkg.github.com/${{ env.GH_ACCOUNT_NAME }}/index.json

      - uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          # Look to see if there is a cache hit for the corresponding requirements file
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release --no-restore

      - name: Test
        run: dotnet test --configuration Release --no-build --logger trx --results-directory "TestResults-${{ matrix.dotnet-version }}"

      - name: Upload test results
        uses: actions/upload-artifact@v3
        with:
          name: dotnet-results-${{ matrix.dotnet-version }}
          path: TestResults-${{ matrix.dotnet-version }}
        # Use always() to always run this step to publish test results when there are test failures
        if: ${{ always() }}

      - name: Package
        run: dotnet pack --output ${{env.NUGET_PACKAGE_PATH}} --configuration Release --no-build --no-restore

      - name: Debug
        run: |
          pwd
          echo 1
          ls -l
          echo 2
          ls ${{env.NUGET_PACKAGE_PATH}} -l
          echo 3

      - name: Publish
        run: dotnet nuget push ${{env.NUGET_PACKAGE_PATH}}/*.nupkg
